(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){module.exports=["babelfish",function(babelfish){return{restrict:"A",link:function(scope,el,attr){el.append(babelfish.get(attr.i18nBindLang||babelfish.current())[attr.i18nBind])}}}]},{}],2:[function(require,module,exports){module.exports=["babelfish",function(babelfish){return{restrict:"A",link:function(scope,el,attr){el.on("click",function(){scope.$apply(function(){babelfish.updateLang(attr.i18nLoad)})})}}}]},{}],3:[function(require,module,exports){module.exports=["babelfish",function(babelfish){return function(input,lang,key){return babelfish.get(lang)[key]}}]},{}],4:[function(require,module,exports){module.exports=angular.module("ngBabelfish",[]).provider("babelfish",require("./providers/babelfish")).directive("i18nLoad",require("./directives/i18nLoad")).directive("i18nBind",require("./directives/i18nBind")).filter("translate",require("./filters/translate")).run(["babelfish","$state","$rootScope",function(babelfish,$state,$rootScope){$rootScope.$on("$stateChangeSuccess",function(e,toState){babelfish.updateState(toState.name)});babelfish.load()}])},{"./directives/i18nBind":1,"./directives/i18nLoad":2,"./filters/translate":3,"./providers/babelfish":5}],5:[function(require,module,exports){module.exports=function(){var i18n={current:"",data:{},available:[],currentState:"",active:false};var config={state:"home",lang:"en-EN",url:"/i18n/languages.json",namespace:"",lazy:false,urls:[{lang:"",url:""}],current:"",log:true};function loadLazyDefaultUrl(){var url=config.url;if(config.lazy){url=config.urls.filter(function(o){return o.lang===config.lang})[0].url}return url}function buildI18n(data){if(!config.lazy){i18n.data=data;return}i18n.data[i18n.current]=data}this.languages=function languagesConfig(params){angular.extend(config,params)};this.$get=["$rootScope","$http",function($rootScope,$http){function setTranslation(page){page=page||config.state;i18n.currentState=page;lang=i18n.current;i18n.active=true,common={},currentPageTranslation={};if(i18n.data[lang]){if(!i18n.data[lang][page]){i18n.data[lang][page]={};if(config.log){console.warn("[ngBabelfish-babelfish@setTranslation] No translation available for the page %s for the lang %s",page,lang)}}angular.extend(common,i18n.data[lang]["_common"]);currentPageTranslation=angular.extend(common,{languages:i18n.available},i18n.data[lang][page]);if(config.namespace){$rootScope[config.namespace]=currentPageTranslation}else{angular.extend($rootScope,currentPageTranslation)}$rootScope.$emit("ngBabelfish.translation:loaded",{currentState:page,lang:lang})}}function loadLanguage(lang){var old=document.documentElement.lang;if(!old){old="en"}if(!lang){lang=old+"-"+old.toUpperCase()}else{document.documentElement.lang=lang.split("-")[0]}config.lang=i18n.current=lang;$rootScope.$emit("ngBabelfish.translation:changed",{previous:old+"-"+old.toUpperCase(),value:lang});if(config.lazy&&!i18n.data[lang]){service.load()}}$rootScope.$on("ngBabelfish.translation:changed",function(){setTranslation(i18n.currentState)});var service={load:function load(url,name){url=url||loadLazyDefaultUrl();if(!document.documentElement.lang&&config.lang){document.documentElement.lang=config.lang.split("-")[0]}var lang=config.lang||document.documentElement.lang+"-"+document.documentElement.lang.toUpperCase();if(i18n.data[i18n.current]){return}return $http.get(url).error(function(){alert("Cannot load i18n translation file")}).success(function(data){if(config.lazy){config.current=name}i18n.current=lang;buildI18n(data);if(config.lazy){i18n.available.push(i18n.current)}else{i18n.available=Object.keys(i18n.data)}}).then(function(){setTranslation(i18n.currentState)})},get:function get(lang){var currentLang=i18n.data[lang||i18n.current]||{},common={},currentStateTranslations={};if(!currentLang[i18n.currentState]){if(config.log){console.warn("[ngBabelfish-babelfish@get] No translation available for the page %s for the  lang %s",i18n.currentState,lang||i18n.current)}currentLang[i18n.currentState]={}}angular.extend(common,{},currentLang["_common"]);return angular.extend(common,currentLang[i18n.currentState])},all:function all(lang){return i18n.data[lang||i18n.current]},current:function current(){return i18n.current},updateState:setTranslation,updateLang:loadLanguage,isLoaded:function isLoaded(){return i18n.active},available:function available(){return i18n.available}};return service}]}},{}]},{},[4]);